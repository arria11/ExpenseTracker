@page "/register"
@using ExpenseTracker.Model
@using ExpenseTracker.Services
@inject IUserService userService
@inject NavigationManager navigationManager

<style>
    body {
        margin: 0;
        padding: 0;
    }

    .title {
        width: 100%;
        color: #30718A;
        text-align: center;
        margin: 0;
        padding: 10px;
    }

    .register-container {
        width: 90%;
        max-width: 400px;
        margin: 50px auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        font-family: Arial, sans-serif;
    }

    h3 {
        color: #30718A;
        text-align: center;
        margin-bottom: 20px;
    }

    form {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    label {
        font-weight: bold;
        margin-bottom: 5px;
    }

    input[type="text"],
    input[type="password"],
    input[type="email"],
    select {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
    }

    button {
        background-color: #30718A;
        color: white;
        padding: 10px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        width: 100%;
    }

        button:hover {
            background-color: #255C71;
        }

    .signin-link {
        text-align: center;
        margin-top: 10px;
    }

        .signin-link a {
            color: #30718A;
            text-decoration: none;
        }

            .signin-link a:hover {
                text-decoration: underline;
            }

    .error-message {
        color: deeppink;
        text-align: center;
        margin-top: 10px;
    }
</style>

<h3 class="title">Expense Tracker App</h3>

<div class="register-container">
    <form>
        <div>
            <label>User Name:</label>
            <input type="text" @bind="newUser.UserName" />
        </div>
        <div>
            <label>Password:</label>
            <input type="password" @bind="newUser.Password" />
        </div>
        <div>
            <label>Email:</label>
            <input type="email" @bind="newUser.Email" />
        </div>
        <div>
            <label>Name:</label>
            <input type="text" @bind="newUser.Name" />
        </div>
        <div>
            <label>Currency:</label>
            <select @bind="newUser.Currency">
                <option value="" disabled>Select a Currency</option>
                @foreach (var currency in availableCurrencies)
                {
                    <option value="@currency">@currency</option>
                }
            </select>
        </div>
        <button type="button" @onclick="AddNewUser">Add User</button>
        <div class="signin-link">
            Have an account? <a href="/">Sign In</a>
        </div>
    </form>

    @if (errorMessage != null)
    {
        <p class="error-message">@errorMessage</p>
    }
</div>

@code {
    private User newUser = new User(); //obj created for User Class
    private string errorMessage;

    private List<string> availableCurrencies = new List<string>
    {
        "USD",
        "NPR",
        "EUR",
        "AUD",
        "CAD",
        "INR",
        "CNY"
    };

    private async Task AddNewUser()
    {
        try
        {
            var existingUsers = await userService.LoadUserAsync();
            // condition check
            if (existingUsers.Any(user => user.UserName == newUser.UserName))
            {
                errorMessage = "A user with this User Name already exists. Please use a different User Name.";
                return; // Exit the method if User ID already exists
            }

            await userService.SaveUserAsync(newUser);
            // Reset the new user object after saving.
            newUser = new User();
            errorMessage = null; // Clear any previous error messages
            navigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while adding the user: {ex.Message}";
            Console.WriteLine(errorMessage); // Log for debugging
        }
    }
}
